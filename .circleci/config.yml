version: 2.1
jobs:
  test-go:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Download Go modules
          command: go mod download
      - run:
          name: Print go mod help instructions
          command: "echo \"go mod download will fail if you have private repositories \nOne way to fix this for private go modules that are hosted in github:\n  1. Add a GITHUB_TOKEN and GITHUB_USER to an org context. Please refer to https://circleci.com/docs/contexts/ for more informaiton on how to use contexts.\n  2. Add a .circleci/config.yml to your repository or use this config.yml as a starting template\n  3. Configure the jobs to use the newly created context which includes GITHUB_TOKEN and GITHUB_USER  \n  4. Before downloading the modules you will need to add a step to execute \\\"go env -w GOPRIVATE=github.com/<OrgNameHere>\\\". \n\tThis allows go mod to install private repos under OrgNameHere.\n  5. You will also need to run \\\"git config --global url.\\\"https://$GITHUB_USER:$GITHUB_TOKEN@github.com/<OrgNameHere>/\\\".insteadOf \\\"https://github.com/<OrgNameHere>/\\\"\\\"\n  6. Finally include the \\\"go mod download\\\" it should be able to fetch your private libraries now. \nFor gitlab private go modules, follow the same instructions as above but include your GITLAB_TOKEN and GITLAB_USER.\nThen use gitlab.com instead of github.com in steps 4 and 5.\nSee https://go.dev/ref/mod#private-modules for more details.\""
          when: on_fail
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod

  build-go-executables:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Download Go modules
          command: go mod download
      - run:
          name: Print go mod help instructions
          command: "echo \"go mod download will fail if you have private repositories \nOne way to fix this for private go modules that are hosted in github:\n  1. Add a GITHUB_TOKEN and GITHUB_USER to an org context. Please refer to https://circleci.com/docs/contexts/ for more informaiton on how to use contexts.\n  2. Add a .circleci/config.yml to your repository or use this config.yml as a starting template\n  3. Configure the jobs to use the newly created context which includes GITHUB_TOKEN and GITHUB_USER  \n  4. Before downloading the modules you will need to add a step to execute \\\"go env -w GOPRIVATE=github.com/<OrgNameHere>\\\". \n\tThis allows go mod to install private repos under OrgNameHere.\n  5. You will also need to run \\\"git config --global url.\\\"https://$GITHUB_USER:$GITHUB_TOKEN@github.com/<OrgNameHere>/\\\".insteadOf \\\"https://github.com/<OrgNameHere>/\\\"\\\"\n  6. Finally include the \\\"go mod download\\\" it should be able to fetch your private libraries now. \nFor gitlab private go modules, follow the same instructions as above but include your GITLAB_TOKEN and GITLAB_USER.\nThen use gitlab.com instead of github.com in steps 4 and 5.\nSee https://go.dev/ref/mod#private-modules for more details.\""
          when: on_fail
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Build executables
          command: go build -o ~/artifacts ./...
      - store_artifacts:
          path: ~/artifacts
          destination: executables

  lint-dockerfile:
    # Install hadolint and run it against the Dockerfile
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Create bin directory in the home directory
          command: mkdir -p $HOME/bin
      - run:
          name: Install hadolint
          command: |
            curl -L https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 -o $HOME/bin/hadolint
            chmod +x $HOME/bin/hadolint
      - run:
          name: Add bin to PATH
          command: echo 'export PATH=$HOME/bin:$PATH' >> $BASH_ENV
      - run:
          name: Lint Dockerfile
          command: hadolint Dockerfile

  test-app:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Download Go modules
          command: go mod download
      - run:
          name: Run Unit Tests
          command: go test -v -short --count=1 $(go list ./...)

  deploy:
    machine:
      docker_layer_caching: true
      resource_class: medium
    steps:
      - checkout
      - run:
          name: Print Working Directory
          command: pwd
      - run:
          name: List Files
          command: ls -la
      - run:
          name: Fix Script Permissions
          command: chmod +x ./build_push_image_karsajobs.sh
      - run:
          name: Verify Permissions
          command: ls -la ./build_push_image_karsajobs.sh
      - run:
          name: Run Deployment Script
          command: ./build_push_image_karsajobs.sh

workflows:
  build-and-test:
    jobs:
      - lint-dockerfile
      - test-go
      - test-app:
          requires:
            - test-go
      - build-go-executables:
          requires:
            - test-app
      - deploy:
          requires:
            - build-go-executables
